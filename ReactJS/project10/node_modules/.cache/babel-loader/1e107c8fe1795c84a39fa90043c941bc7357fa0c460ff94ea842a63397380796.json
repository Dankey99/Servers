{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Servers\\\\ReactJS\\\\project10\\\\src\\\\DataFromWeb.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction DataFromWeb() {\n  _s();\n  let [records, setRecords] = useState([]);\n  function getDataFromResponse(data) {\n    setRecords(data);\n  }\n  function processResponse(response) {\n    let jsonPromise = response.json();\n    jsonPromise.then(getDataFromResponse);\n  }\n  let responsePromise = fetch('https://jsonplaceholder.typicode.com/comments');\n  responsePromise.then(processResponse);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hello Web\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: \"Enter ID here\",\n      id: \"t1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      value: \"Go\",\n      onClick: clickingButton\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: records.map(rec => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: rec.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: rec.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: rec.body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(DataFromWeb, \"My3+7tL8OOIngyRfbBmHpG1tRCc=\");\n_c = DataFromWeb;\nexport default DataFromWeb;\nvar _c;\n$RefreshReg$(_c, \"DataFromWeb\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","DataFromWeb","_s","records","setRecords","getDataFromResponse","data","processResponse","response","jsonPromise","json","then","responsePromise","fetch","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","id","onClick","clickingButton","map","rec","name","email","body","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Servers/ReactJS/project10/src/DataFromWeb.js"],"sourcesContent":["import { useState } from \"react\";\r\nfunction DataFromWeb(){\r\n    let[records,setRecords]=useState([])\r\n    \r\n    function getDataFromResponse(data){\r\n        setRecords(data)\r\n    }\r\n    function processResponse(response){\r\n        let jsonPromise= response.json()\r\n        jsonPromise.then(getDataFromResponse)\r\n    }\r\n    let responsePromise = fetch('https://jsonplaceholder.typicode.com/comments')\r\n    responsePromise.then(processResponse)\r\n\r\n   \r\n    return(\r\n        <>\r\n        <h1>Hello Web</h1>\r\n        <input type=\"text\" value=\"Enter ID here\" id=\"t1\"/>\r\n        <input type=\"button\" value=\"Go\" onClick={clickingButton}></input>\r\n        <table>\r\n            {\r\n                records.map( (rec) =>\r\n                <tr>\r\n                    <td>{rec.name}</td>\r\n                    <td>{rec.email}</td>\r\n                    <td>{rec.body}</td>\r\n                    \r\n                </tr>\r\n                )\r\n            }\r\n        </table>\r\n\r\n\r\n\r\n\r\n\r\n\r\n        </>\r\n    )\r\n}\r\nexport default DataFromWeb;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AACjC,SAASC,WAAWA,CAAA,EAAE;EAAAC,EAAA;EAClB,IAAG,CAACC,OAAO,EAACC,UAAU,CAAC,GAACR,QAAQ,CAAC,EAAE,CAAC;EAEpC,SAASS,mBAAmBA,CAACC,IAAI,EAAC;IAC9BF,UAAU,CAACE,IAAI,CAAC;EACpB;EACA,SAASC,eAAeA,CAACC,QAAQ,EAAC;IAC9B,IAAIC,WAAW,GAAED,QAAQ,CAACE,IAAI,CAAC,CAAC;IAChCD,WAAW,CAACE,IAAI,CAACN,mBAAmB,CAAC;EACzC;EACA,IAAIO,eAAe,GAAGC,KAAK,CAAC,+CAA+C,CAAC;EAC5ED,eAAe,CAACD,IAAI,CAACJ,eAAe,CAAC;EAGrC,oBACIT,OAAA,CAAAE,SAAA;IAAAc,QAAA,gBACAhB,OAAA;MAAAgB,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBpB,OAAA;MAAOqB,IAAI,EAAC,MAAM;MAACC,KAAK,EAAC,eAAe;MAACC,EAAE,EAAC;IAAI;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAClDpB,OAAA;MAAOqB,IAAI,EAAC,QAAQ;MAACC,KAAK,EAAC,IAAI;MAACE,OAAO,EAAEC;IAAe;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACjEpB,OAAA;MAAAgB,QAAA,EAEQX,OAAO,CAACqB,GAAG,CAAGC,GAAG,iBACjB3B,OAAA;QAAAgB,QAAA,gBACIhB,OAAA;UAAAgB,QAAA,EAAKW,GAAG,CAACC;QAAI;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACnBpB,OAAA;UAAAgB,QAAA,EAAKW,GAAG,CAACE;QAAK;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACpBpB,OAAA;UAAAgB,QAAA,EAAKW,GAAG,CAACG;QAAI;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEnB,CACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEF,CAAC;EAAA,eAON,CAAC;AAEX;AAAChB,EAAA,CAvCQD,WAAW;AAAA4B,EAAA,GAAX5B,WAAW;AAwCpB,eAAeA,WAAW;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}